import static spark.Spark.*;
import spark.ModelAndView;
import spark.template.velocity.VelocityTemplateEngine;

import java.util.*;

public class App {
    public static void main(String[] args) {
        staticFiles.location("/public");

        Cart cart = new Cart();
        PaymentService paymentService = new PaymentService();

        List<String> availableProducts = Arrays.asList("Laptop", "Phone", "Headphones", "Camera");

        get("/", (req, res) -> {
            Map<String, Object> model = new HashMap<>();
            model.put("products", availableProducts);
            return new ModelAndView(model, "templates/index.html");
        }, new VelocityTemplateEngine());

        post("/add-to-cart", (req, res) -> {
            String product = req.queryParams("product");
            if (product != null && !product.isEmpty()) {
                cart.addItem(product);
            }
            res.redirect("/cart");
            return null;
        });

        get("/cart", (req, res) -> {
            Map<String, Object> model = new HashMap<>();
            model.put("cart", cart.getItems());
            model.put("error", req.queryParams("error"));
            return new ModelAndView(model, "templates/cart.html");
        }, new VelocityTemplateEngine());

        post("/checkout", (req, res) -> {
            if (cart.isEmpty()) {
                res.redirect("/cart?error=empty");
                return null;
            }
            return new ModelAndView(null, "templates/checkout.html");
        }, new VelocityTemplateEngine());

        post("/confirm", (req, res) -> {
            String address = req.queryParams("address");
            String card = req.queryParams("card");

            if (!PaymentService.validateCard(card)) {
                res.redirect("/checkout?error=invalid_card");
                return null;
            }

            boolean success = paymentService.processPayment(card);

            if (!success) {
                res.redirect("/checkout?error=payment_failed");
                return null;
            }

            cart.clear();
            return new ModelAndView(null, "templates/confirm.html");
        }, new VelocityTemplateEngine());
    }
}
